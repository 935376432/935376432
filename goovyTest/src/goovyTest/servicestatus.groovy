statu = '''abrtd (pid  1823) 正在运行...
abrt-dump-oops (pid 1831) 正在运行...
acpid (pid  1604) 正在运行...
atd (pid  1925) 正在运行...
auditd (pid  1382) 正在运行...
insufficient privilege to change service status
avahi-daemon (pid  1489) 正在运行...
用法：/etc/init.d/bluetooth {start|stop}
certmonger 已停
cpuspeed 已停
crond (pid  1875) 正在运行...
cupsd (pid  1593) 正在运行...
dnsmasq 已停
用法：/etc/init.d/firstboot {start|stop}
hald (pid  1613) 正在运行...
httpd 已停
Kdump is not operational
qpidd 已停
matahari-qmf-hostd 已停
matahari-qmf-networkd 已停
matahari-qmf-serviced 已停
matahari-qmf-sysconfigd 已停
mdmonitor 已停
messagebus (pid  1466) 正在运行...
模块 netconsole 未被加载
已配置的 NFS 挂载点：
/var/testdir/mount_dir
配置设备：
lo eth0
当前的活跃设备：
lo eth0
NetworkManager (pid  1477) 正在运行...
rpc.svcgssd 已停
rpc.mountd 已停
nfsd 已停
rpc.rquotad 已停
rpc.statd (pid  1543) 正在运行...
ntpd 已停
oddjobd 已停
portreserve 已停
master status unknown due to insufficient privileges.
进程记帐被禁用。
user had insufficient privilege
quota_nld 已停
rdisc 已停
rpcbind (pid  1450) 正在运行...
rpc.gssd 已停
rpc.idmapd (pid 1583) 正在运行...
rpc.svcgssd 已停
rsyslogd status unknown due to insufficient privileges.
sandbox is stopped
saslauthd 已停
smartd 已停
snmpd 已停
snmptrapd 已停
spice-vdagentd 已停
/etc/init.d/sshd: line 33: /etc/sysconfig/sshd: 权限不够
openssh-daemon (pid  1700) 正在运行...
sssd 已停
Xvnc (pid 1903) 正在运行...
vsftpd (pid 1719) 正在运行...
wdaemon 已停
wpa_supplicant (pid  1577) 正在运行...
/etc/init.d/xinetd: line 46: /etc/sysconfig/xinetd: 权限不够
xinetd (pid  1708) 正在运行...
ypbind 已停
'''

boot = '''NetworkManager    0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
abrt-ccpp       0:关闭    1:关闭    2:关闭    3:启用    4:关闭    5:启用    6:关闭
abrt-oops       0:关闭    1:关闭    2:关闭    3:启用    4:关闭    5:启用    6:关闭
abrtd           0:关闭    1:关闭    2:关闭    3:启用    4:关闭    5:启用    6:关闭
acpid           0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
atd             0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
auditd          0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
autofs          0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
avahi-daemon    0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
bluetooth       0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
certmonger      0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
cpuspeed        0:关闭    1:启用    2:启用    3:启用    4:启用    5:启用    6:关闭
crond           0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
cups            0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
dnsmasq         0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
firstboot       0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
haldaemon       0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
httpd           0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
ip6tables       0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
iptables        0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
irqbalance      0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
kdump           0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
lvm2-monitor    0:关闭    1:启用    2:启用    3:启用    4:启用    5:启用    6:关闭
matahari-broker 0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
matahari-host   0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
matahari-network    0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
matahari-service    0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
matahari-sysconfig  0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
mdmonitor       0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
messagebus      0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
netconsole      0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
netfs           0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
network         0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
nfs             0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
nfslock         0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
ntpd            0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
ntpdate         0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
oddjobd         0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
portreserve     0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
postfix         0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
psacct          0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
qpidd           0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
quota_nld       0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
rdisc           0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
restorecond     0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
rpcbind         0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
rpcgssd         0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
rpcidmapd       0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
rpcsvcgssd      0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
rsyslog         0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
saslauthd       0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
smartd          0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
snmpd           0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
snmptrapd       0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
spice-vdagentd  0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:启用    6:关闭
sshd            0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
sssd            0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
sysstat         0:关闭    1:启用    2:启用    3:启用    4:启用    5:启用    6:关闭
udev-post       0:关闭    1:启用    2:启用    3:启用    4:启用    5:启用    6:关闭
vncserver       0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
vsftpd          0:关闭    1:关闭    2:启用    3:启用    4:启用    5:启用    6:关闭
wdaemon         0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
wpa_supplicant  0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭
xinetd          0:关闭    1:关闭    2:关闭    3:启用    4:启用    5:启用    6:关闭
ypbind          0:关闭    1:关闭    2:关闭    3:关闭    4:关闭    5:关闭    6:关闭

基于 xinetd 的服务：
    cvs:            关闭
    rsync:          关闭
    telnet:         启用'''

/*if (statu == null || "".equals(statu)) {
    return null;
}
String[] rows = statu.split("\\n");
Map<String, Object> outputs = new HashMap<>();
for (String row : rows) {
    row = row.trim();
    if (row.length() <= 0) {
        continue;
    }
    int index = -1;
    String key = null;
    if (((index = row.lastIndexOf(" is stopped")) > -1 || (index = row.lastIndexOf(" 已停")) > -1)
        || (index = row.lastIndexOf(" is not running")) > -1 && row.endsWith(" is not running")
        || (index = row.lastIndexOf(" stopped")) > -1 && row.endsWith(" stopped")) {
        key = row.substring(0,index);
    } else if (((index = row.lastIndexOf(" is running")) > -1 || (index = row.lastIndexOf(" 正在运行")) > -1) && (index = row.indexOf(" (pid")) > -1
        || (index = row.lastIndexOf(" running...")) > -1) {
        key = row.substring(0,index);
    }
    if (key != null) {
        outputs.put(key, key);
        println(key + ":" + key);
    }
}
println(outputs);
return outputs;*/

//运行状态
/*if (statu == null || "".equals(statu)) {
    return null;
  }
  String[] rows = statu.split("\\n");
  Map<String, Object> outputs = new HashMap<>();
  for (String row : rows) {
    row = row.trim();
    if (row.length() <= 0) {
      continue;
    }
    int index = -1;
    String key = null;
    Object value = null;
    if (((index = row.lastIndexOf(" is stopped")) > -1 || (index = row.lastIndexOf(" 已停")) > -1)
      || (index = row.lastIndexOf(" is not running")) > -1 && row.endsWith(" is not running")
      || (index = row.lastIndexOf(" stopped")) > -1 && row.endsWith(" stopped")) {
      key = row.substring(0,index);
      value = false;
    } else if (((index = row.lastIndexOf(" is running")) > -1 || (index = row.lastIndexOf(" 正在运行")) > -1) && (index = row.indexOf(" (pid")) > -1
      || (index = row.lastIndexOf(" running...")) > -1) {
      key = row.substring(0,index);
      value = true;
    }
    if (key != null) {
      outputs.put(key, value);
      println(key + ":" + value);
    }
  }
  return outputs;*/

  //开机启动
  /*if (statu == null || "".equals(statu) || boot == null || "".equals(boot)) {
      return null;
    }
    String[] rows = statu.split("\\n");
    String[] chkconfigRows = boot.split("\\n");
    Map<String, Object> outputs = new HashMap<>();
    for (String row : rows) {
      row = row.trim();
      if (row.length() <= 0) {
        continue;
      }
      int index = -1;
      String serviceName = null;
      if (((index = row.lastIndexOf(" is stopped")) > -1 || (index = row.lastIndexOf(" 已停")) > -1)
        || (index = row.lastIndexOf(" is not running")) > -1 && row.endsWith(" is not running")
        || (index = row.lastIndexOf(" stopped")) > -1 && row.endsWith(" stopped")) {
        serviceName = row.substring(0,index);
      } else if (((index = row.lastIndexOf(" is running")) > -1 || (index = row.lastIndexOf(" 正在运行")) > -1) && (index = row.indexOf(" (pid")) > -1
        || (index = row.lastIndexOf(" running...")) > -1) {
        serviceName = row.substring(0,index);
      }
      if (serviceName != null) {
        outputs.put(serviceName, false);
        for (String chkconfigRow : chkconfigRows) {
          if (chkconfigRow.startsWith(serviceName)) {
            String [] chkconfigRowSplit = chkconfigRow.split("[ \t]+");
            if (chkconfigRowSplit.length > 4 ) {
              if ("3:off".equals(chkconfigRowSplit[4]) || "3:关闭".equals(chkconfigRowSplit[4])) {
                outputs.put(serviceName, false);
                println(serviceName + ":" + "false");
              } else if ("3:on".equals(chkconfigRowSplit[4]) || "3:启用".equals(chkconfigRowSplit[4])) {
                outputs.put(serviceName, true);
                println(serviceName + ":" + "true");
              }
            }
          }
        }

      }
    }
    println(outputs)
    return outputs;*/

if (statu == null || "".equals(statu) || boot == null || "".equals(boot)) {
      return null;
    }
    List<Map<String, Object>> rtnList = new ArrayList<>();
    String[] rows = statu.split("\\n");
    String[] chkconfigRows = boot.split("\\n");
    for (String row : rows) {
      row = row.trim();
      if (row.length() <= 0) {
        continue;
      }
      int index = -1;
      Map<String, Object> outputs = new HashMap<>();
      String serviceName = null;
      if (((index = row.lastIndexOf(" is stopped")) > -1 || (index = row.lastIndexOf(" 已停")) > -1)
        || (index = row.lastIndexOf(" is not running")) > -1 && row.endsWith(" is not running")
        || (index = row.lastIndexOf(" stopped")) > -1 && row.endsWith(" stopped")) {
        serviceName = row.substring(0,index);
        outputs.put("name", serviceName);
        outputs.put("runStatus", "false");
      } else if (((index = row.lastIndexOf(" is running")) > -1 || (index = row.lastIndexOf(" 正在运行")) > -1) && (index = row.indexOf(" (pid")) > -1
        || (index = row.lastIndexOf(" running...")) > -1) {
        serviceName = row.substring(0,index);
        outputs.put("name", serviceName);
        outputs.put("runStatus", "true");
      }
      if (serviceName != null) {
        outputs.put("startStatus", "true");
        for (String chkconfigRow : chkconfigRows) {
          if (chkconfigRow.startsWith(serviceName)) {
            String [] chkconfigRowSplit = chkconfigRow.split("[ \t]+");
            if (chkconfigRowSplit.length > 4 ) {
              if ("3:off".equals(chkconfigRowSplit[4]) || "3:关闭".equals(chkconfigRowSplit[4])) {
                outputs.put("startStatus", "false");
              } else if ("3:on".equals(chkconfigRowSplit[4]) || "3:启用".equals(chkconfigRowSplit[4])) {
                outputs.put("startStatus", "true");
              }
            }
          }
        }
      } else {
          continue;
      }
      rtnList.add(outputs);
    }
    return rtnList;


